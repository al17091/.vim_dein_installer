[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'tomasr/molokai'

[[plugins]]
repo = 'preservim/nerdtree'

hook_add = '''
noremap <C-L> :NERDTree<CR>
'''

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'kien/ctrlp.vim'

[[plugins]]
repo = 'Yggdroot/indentLine'

[[plugins]]
repo = 'w0rp/ale'

[[plugins]]
repo = 'itchyny/lightline.vim'

[[plugins]]
repo = 'maximbaz/lightline-ale'

hook_add = '''
let g:ale_echo_msg_error_str = 'error'
let g:ale_echo_msg_warning_str = 'warning'
let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'

set laststatus=2
if !has('gui_running')
    set t_Co=256
endif

let g:lightline = {
    \   'colorscheme': 'wombat',
    \   'active': {
    \       'left': [
    \           ['mode', 'paste'],
    \           ['readonly', 'filename', 'modified', 'ale'],
    \           ['linter_checking','linter_errors','linter_warnings','linter_infos','linter_ok'],
    \       ]
    \   }, 
    \   'component_expand': {
    \       'linter_checking': 'lightline#ale#checking',
    \       'linter_infos': 'lightline#ale#infos',
    \       'linter_warnings': 'lightline#ale#warnings',
    \       'linter_errors': 'lightline#ale#errors',
    \       'linter_ok': 'lightline#ale#ok',
    \   },
    \   'component_type': {
    \       'linter_checking': 'right',
    \       'linter_infos': 'right',
    \       'linter_warnings': 'warning',
    \       'linter_errors': 'error',
    \       'linter_ok': 'right',
    \   },
    \   'component_function': {
    \       'ale': 'ALEGetStatusLine'
    \   }
    \}
'''

[[plugins]]
repo = 'roxma/nvim-yarp'

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = 'let g:deoplete#enable_at_startup = 1'


